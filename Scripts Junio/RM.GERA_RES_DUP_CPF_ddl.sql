------- Generated by SYS.DBMS_METADATA on 28-jan-2010 at 14:23:25 -------

  CREATE OR REPLACE PROCEDURE "RM"."GERA_RES_DUP_CPF" IS
-- Purpose: Generating only registers that have duplicate cpf
   CURSOR CPESS IS
      SELECT CODIGO, NOME, CPF FROM ppessoa
      WHERE CPF IN
      (SELECT CPF QTDCPF 
       FROM PPESSOA
       WHERE CPF IS NOT NULL
       GROUP BY CPF
       HAVING COUNT(CPF)>1
      )  ORDER BY CPF, NOME;
      
   CURSOR CPESS2 IS
      SELECT CODIGO, NOME, CARTIDENTIDADE RG FROM ppessoa
      WHERE CARTIDENTIDADE IN
      (SELECT CARTIDENTIDADE QTDRG 
       FROM PPESSOA
       WHERE CARTIDENTIDADE IS NOT NULL
       GROUP BY CARTIDENTIDADE
       HAVING COUNT(CARTIDENTIDADE)>1
      )
      ORDER BY RG, NOME;

MAXGRD DEDUPESS.GRUPO%TYPE;
CPFA PPESSOA.CPF%TYPE := '-1';
RGA PPESSOA.CARTIDENTIDADE%TYPE := '-1';

BEGIN
   DBMS_OUTPUT.Put_Line('INICIALIZANDO O PROCESSO DE GERAÁ„O DE REGISTROS COM CPF/RG DUPLICADOS...');  

   SELECT MAX(NVL(GRUPO,0)) INTO MAXGRD FROM DEDUPESS; 
   
   FOR X IN CPESS LOOP     
      BEGIN
         IF(X.CPF IS NOT NULL) THEN
            IF(CPFA <> X.CPF) THEN 
               MAXGRD := MAXGRD + 1;
               CPFA := X.CPF;             
            END IF;
            INSERT INTO DEDUPESS(COD,GRUPO,TIPO)VALUES(X.CODIGO,MAXGRD,'1');
         END IF;
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN NULL; 
      END;
      COMMIT;
   END LOOP;

   SELECT MAX(NVL(GRUPO,0)) INTO MAXGRD FROM DEDUPESS; 

   FOR X IN CPESS2 LOOP    
      BEGIN
         IF(X.RG IS NOT NULL) THEN
            IF(RGA <> X.RG) THEN 
               MAXGRD := MAXGRD + 1;
               RGA := X.RG;            
            END IF;
            INSERT INTO DEDUPESS(COD,GRUPO,TIPO)VALUES(X.CODIGO,MAXGRD,'2');        
         END IF;
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN NULL; 
      END;
      COMMIT;
   END LOOP;
      
   DBMS_OUTPUT.Put_Line('PROCESSO FINALIZADO COM SUCESSO!');  
END; -- Procedure 
 
 
/
