<HTML>
<HEAD>
<TITLE>Article</TITLE>
</HEAD>
<BODY BGCOLOR="#ffffff" LINK="#010D9B" VLINK="#006633">
<CENTER>
<TABLE BORDER=0 WIDTH=600 CELLPADDING=0 CELLSPACING=0>
<TR><TD COLSPAN=3><IMG SRC="a/logo1.gif" BORDER=0 WIDTH=126 HEIGHT=36 ALT="upper logo half"><IMG SRC="a/articles.gif" BORDER=0 WIDTH=324 HEIGHT=36 ALT="Article"><A HREF="http://www.platinum.com/index.html"><IMG SRC="a/home.gif" BORDER=0 WIDTH=150 HEIGHT=36 ALT="Home"></A><BR><IMG SRC="a/logo2.gif" BORDER=0 WIDTH=126 HEIGHT=22 ALT="PLATINUM technology, inc."><A HREF="http://www.platinum.com/new.htm"><IMG SRC="a/news1.gif" BORDER=0 WIDTH=49 HEIGHT=22 ALT="News"></A><A HREF="http://www.platinum.com/products/products.htm"><IMG SRC="a/product2.gif" BORDER=0 WIDTH=65 HEIGHT=22 ALT="Products"></A><A HREF="http://www.platinum.com/tech/tech.htm"><IMG SRC="a/support1.gif" BORDER=0 WIDTH=55 HEIGHT=22 ALT="Support"></A><A HREF="http://www.platinum.com/map.htm"><IMG SRC="a/map1.gif" BORDER=0 WIDTH=37 HEIGHT=22 ALT="Map"></A><A HREF="http://www.platinum.com/Architext/gsearch.htm"><IMG SRC="a/search1.gif" BORDER=0 WIDTH=51 HEIGHT=22 ALT="Search"></A><A HREF="http://www.platinum.com/corp/about.htm"><IMG SRC="a/corp1.gif" BORDER=0 WIDTH=67 HEIGHT=22 ALT="Corporate"></A><A HREF="http://www.platinum.com/world.htm"><IMG SRC="a/world1.gif" BORDER=0 WIDTH=76 HEIGHT=22 ALT="Worldwide"></A><A HREF="http://www.platinum.com/mail.htm"><IMG SRC="a/contact1.gif" BORDER=0 WIDTH=74 HEIGHT=22 ALT="Contact Us"></A></TD></TR><TR><TD COLSPAN=2 WIDTH=600 HEIGHT=15></TD></TR>
<TR><TD VALIGN=top WIDTH=126>
<FONT FACE="Arial" size=2>
<A HREF="http://www.platinum.com/products/dat.htm">Free SQL-Station Download</A><BR><BR>
<A HREF="station.htm">SQL-Station</A><BR><BR>
<A HREF="sql_cod2.htm">SQL-Station Coder</A><BR><BR>
<A HREF="debugger.htm">SQL-Station Debugger</A><BR><BR>
<A HREF="plan_an2.htm">SQL-Station Plan Analyzer</A></FONT>
<BR>
<IMG SRC="a/wspace.gif" WIDTH=110 HEIGHT=1 ALT="white space">
</TD>
<TD>
<IMG SRC="a/wspace.gif" WIDTH=16 HEIGHT=1 ALT="white space">
</TD>
<TD>
<IMG SRC="a/orevlogo.gif" WIDTH=200 HEIGHT=69 ALT="Oreview - The Independent Voice of Oracle Product Users">
<BR>
<FONT SIZE=3 FACE="Arial">
<FONT SIZE=2><B>Product Review:</B></FONT><BR>
<FONT SIZE=5><B>PLATINUM <I>technology</I>'s SQL-Station Plan Analyzer for Oracle</B></FONT>
<BR>&nbsp;<BR>
<font color="#800000" size=3><B>For years the prophets of Oracle tuning have been loudly proclaiming
that 60 to 70 percent of an application's performance is derived from the
combination of a good logical database design and savvy SQL coding on the
part of the developers. However, a solid RDBMS structure must come first,
because even the most seasoned coder will have performance problems with
a database that isn't put together correctly. But when given a good physical
database, it's up to the developer to write fast, efficient SQL.</B></FONT>
<BR>&nbsp;<BR>
<font size=2><B>June 1997/Robin Schumacher</B></FONT>
<BR><BR>
<FONT SIZE=2 FACE="Arial">
A GUI-based tool for both developers and DBAs that automates SQL capture
and tuning for Oracle databases. Allows developers to reduce the effort
required to create, display, interpret, and test their SQL optimization
plans. Also provides an automated capture facility that lets DBAs and developers
identify resource-intensive SQL statements.
<BR><BR>
<B>Requirements:</B><BR>
Version 2.3.1 supports Windows 3.1 and above,
Windows 95, and Windows NT. Compatible with Oracle7 and above.
<BR><BR>
<B>Price:</B><BR>
$2,495 separately, or $2,995 for the bundled SQL-Station suite,
which includes SQL-Station Coder and SQL-Station Debugger.
<BR><BR>
<CENTER>
<IMG SRC="a/smalldog.gif" WIDTH=54 HEIGHT=51 ALIGN=BOTTOM><IMG SRC="a/smalldog.gif" WIDTH=54 HEIGHT=51 ALIGN=BOTTOM><IMG SRC="a/smalldog.gif" WIDTH=54 HEIGHT=51 ALIGN=BOTTOM><IMG SRC="a/smalldog.gif" WIDTH=54 HEIGHT=51 ALIGN=BOTTOM><BR>
<A HREF="#legend"><B>4 Dogs, Best of Breed</B></A>
</CENTER>
<BR><BR>
Considering all of the database monitoring and tuning tools on the market
today, you'd think there would be a plethora of SQL application tuning tools
as well. Wrong. Why this is the case I haven't a clue; maybe it's just because
it's hard to build the type of tools that are actually helpful in aiding
the creation and tuning of SQL code. I've come across one application tuning
tool, however, that I don't want to be without: PLATINUM <I>technology</I>'s Plan
Analyzer for Oracle. From a broad perspective, Plan Analyzer lets both DBAs
and developers perform some very needed (but often forgotten) tasks:
<UL>
  <LI>Generate and compare various optimization plans for new and existing
  SQL statements.<BR>
  <LI>Monitor server performance as it relates to SQL requests.<BR>
  <LI>Capture and identify problem SQL statements that are causing server
  slowdowns.
</UL>
<B>Getting Started</B><BR>
SQL-Station Plan Analyzer for Oracle is sold in two ways: separately,
and bundled with an optional suite of tools that PLATINUM has dubbed &quot;SQL-Station.&quot;
The suite of tools includes:
<UL>
  <LI>SQL-<I>Station Coder:</I> a tool developers can use to build, edit,
  and execute server-side code such as stored procedures, packages, and triggers.<BR>
  <LI>SQL-<I>Station Debugger:</I> a tool that provides Oracle engineers
  with much-needed relief in the areas of testing and debugging triggers,
  functions, and procedures.
</UL>

Heavy-duty Oracle shops that rely on the standard Oracle development
tools (such as SQL*Plus) should take a long, hard look at the entire SQL-Station
product line.
<BR><BR>
For this review, I tested the latest version of SQL-Station Plan Analyzer
for Oracle, version 2.3.1. I installed the product on a Pentium 120MHz,
Windows NT 4.0 workstation with 64MB of RAM, as well as on a Pentium 133MHz
machine with 32MB of RAM running Windows 95. I installed Plan Analyzer without
incident, and it used only approximately 7MB of disk space on my machine.
The connections to Oracle are handled by native drivers using Oracle's standard
SQL*Net software; thus you don't need ODBC code or other configurations,
as you do with some third-party tools.
<BR><BR>
Prior to actually using SQL-Station Plan Analyzer, you must install repository
tables (along with a few stored procedures and packages), which are used
to hold your generated "EXPLAIN" and statistical data. SQL-Station
Plan Analyzer supplies a separate GUI tool to perform this install, and
I was able to quickly and easily build the necessary required objects. Working
with earlier releases, I occasionally encountered ORA-0600 errors, but version
2.3.1 fixed this bug as well as other bugs in the repository schema.
<BR><BR>
<B>EXPLAIN Made Easy</B><BR>
Without a tool such as SQL-Station Plan Analyzer, you are faced with
the familiar drill of creating a personal Plan table, executing your SQL
with the "EXPLAIN PLAN" clause, and then querying the Plan table
to view the results. I became so disenchanted with this process that I wrote
my own "GUI EXPLAIN" program with PowerBuilder, although I haven't
used it since I got Plan Analyzer. Oracle provides some assistance in this
area with the new SQL*Plus "SET AUTOTRACE ON" feature, which
lets you execute SQL and then immediately view a formatted "EXPLAIN"
plan and some predefined performance statistics. Although "SET AUTOTRACE
ON" is a big help inside SQL*Plus, it still forces users to execute
their query first, which can be a drag for logic that takes some time to
run.
<BR><BR>
SQL-Station Plan Analyzer is organized into several tabbed sections that
let developers enter their SQL code using a variety of Oracle optimizer
methods. (<A HREF="#fig1">See Figure 1</A>) With Plan Analyzer, you can quickly see the impact
of various optimizer techniques that use the same base SQL. You can see
the access path differences between using rule-based optimization and cost-based
optimization. You may also try applying any custom-based hints you'd like.
For example, both rule- and cost-based plans utilize most table indexes,
if possible. But after I created a bitmap index (new with Oracle 7.3) on
a table and performed an "ANALYZE", I was able to see that a
rule-based approach still uses a full table scan to read the table, completely
ignoring the bitmap index, while the cost-based methods with the "FIRST
ROW" and "ALL ROWS" hints use the index, which results
in much faster performance. (<A HREF="#fig2">See Figure 2</A>)<BR><BR>
<CENTER>
<A NAME="fig1"></A>
<B>Figure1<BR>
</B><IMG SRC="a/9706rev1.gif" WIDTH=450 HEIGHT=336 ALT="Plan Analysis for Oracle">
<BR><BR>
<A NAME="fig2"></A>
<B>Figure2</B><BR>
<IMG SRC="a/9706rev2.gif" WIDTH=450 HEIGHT=317 ALT="Compare Statistics">
</CENTER>
<BR><BR>
One of my favorite parts of SQL-Station Plan Analyzer is its Server Statistics
feature. Server Statistics really shows where the rubber meets the road
in regard to response time and what's going on within the database kernel
during SQL execution, so it's sure to be a hit with benchmark junkies. Once
you create one or more optimization methods, you can try them out to see
things such as elapsed and CPU times, I/O, sorting, and table scans. The
ability to perform this type of testing and comparison of different coding
approaches and to see the statistical impact really makes Plan Analyzer
shine. After you benchmark the various optimization paths, you can compare
the statistics to find the faster method. You can show the comparisons in
a bar chart or in a text report. Naturally, to obtain accurate readings
in either the "EXPLAIN" or Server Statistics areas, you should
perform the tests with data that is representative of your production data;
anything less will make for nasty surprises later on.
<BR><BR>
Because the engineers at PLATINUM know that the cost-based optimizer
is directly affected by the statistics maintained about each object in the
Oracle data dictionary, they have built in functionality to help you collect
object statistics. SQL-Station Plan Analyzer can identify each table in a
SQL statement and perform an "ANALYZE" with either the full or
estimate options. The tool then reports various table, index, and cluster
statistics, using color coding to indicate either favorable or unfavorable
findings. For example, a table that has gone into multiple extents appears
red in the extents column, indicating a problem; an index with a small B-tree
depth appears green, indicating that all is well.
<BR><BR>
Speaking of indexes, if you believe your SQL would benefit from new indexes,
you can build them on the fly with SQL-Station Plan Analyzer. And after
you create new indexes, you can view their impact either by rerunning an
"EXPLAIN" or by running a new test in Server Statistics. You
can then add useful indexes into your production database.
<BR><BR>
During heavy development, you may find yourself testing and implementing
so many different coding approaches that you forget what you did to reach
your end results. SQL-Station Plan Analyzer helps you here by enabling you
to save all of the "EXPLAIN" results for a SQL statement, along
with any statistics you've generated. SQL-Station Plan Analyzer saves all
of the data in easily accessible folders to the repository tables you created
during the install process. Once saved, you can easily retrieve any set
of benchmarks from the repository back into the SQL-Station Plan Analyzer
development environment.
<BR><BR>
<B>Not for Developers Only</B><BR>
In addition to helping developers write efficient SQL, SQL-Station Plan
Analyzer also offers a number of excellent features for DBAs. One problem
DBAs often have is identifying SQL statements that are system hogs. Plan
Analyzer helps DBAs prowl around an Oracle instance and locate offending
SQL through its monitoring functions. Version 2.3.1 offers more selectivity
as to which activities DBAs can track than did prior releases. DBAs can
now choose to do something as global as capture everything in the Oracle
shared pool, or they can narrow the scope to a single user's session, any
SQL that references certain tables or tables within a certain tablespace,
or any SQL that contains certain SQL syntax. DBAs can also choose to hone
in on the top five or 10 SQL statements that use the most CPU time or generate
excessive I/O. DBAs can then either display these statistics immediately
or collect them for a specified time period and view them later. SQL-Station Plan
Analyzer can show the SQL collected along with detailed performance results,
allowing DBAs to select sets of SQL and perform "EXPLAINs" to
see which access paths are being used. Such abilities are a godsend to DBAs
in charge of heavily accessed OLTP or OLAP databases.
<BR><BR>
<B>Well Planned</B><BR>
It's rare that I find a product as well thought-out as SQL-Station Plan
Analyzer. The PLATINUM engineers have put together a tool that makes life
easier for both developers and DBAs. And at $2,595 (or $2,995 for the entire
SQL-Station suite), the product is a good deal for those shops in which
heavy Oracle development is the norm. If you haven't given SQL-Station Plan
Analyzer a look, you can download a free 30-day trial (along with the other
SQL-Station tools) from PLATINUM's Web site. If it's
true that 60 to 70 percent of an application's performance comes from a
system's SQL, then SQL-Station Plan Analyzer is one tool you don't want
to be without.
<BR><BR>
<B><I>Robin Schumacher</I></B><I> is a senior DBA and developer for Louisville
Gas &amp; Electric in Louisville, Kentucky. He writes regularly on advanced
database/development topics, performance tuning, and system administration.
He is the coauthor of The PowerBuilder 5.0 Developer's Resource (Prentice
Hall, 1997) and a principal of Advanced Computer Designs. You can email
Robin at <A HREF="mailto:robins@ka.net">robins@ka.net</A> or visit his home
page at <A HREF="http://www.ka.net/robins">www.ka.net/robins</A>.</I>
<BR>
<BR>
<A NAME="legend"></A>
<B>Legend:</B>
<BR><BR>
<IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><B><I>4-Best of Breed</I></B>
<BR><BR>
<IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><B><I>3-Top Dog</I></B>
<BR><BR>
<IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><B><I>2-Still a Puppy</I></B>
<BR><BR>
<IMG SRC="a/smalldog.gif" WIDTH=43 HEIGHT=40><B><I>1-A Mutt</I></B>
</FONT></FONT><BR>&nbsp;<BR>
<FONT SIZE=1>Reprinted with permission from <I><A HREF="http://www.oreview.com">OReview Magazine</A></I>, June, 1997, Volume 3, Number 5, copyright Miller Freeman, Inc., ALL RIGHTS RESERVED.</FONT>
<BR>&nbsp;<BR>
<FONT SIZE=2>All prices based in US terms only. Pricing varies with configuration and processor class/group.</FONT><BR>&nbsp;<BR>
<FONT SIZE=1><A HREF="http://www.platinum.com/copyrght.htm">&copy; 1995, 1997</A> PLATINUM <I>technology, inc</I>. All rights reserved.<BR>800-442-6861&nbsp;&nbsp;&nbsp;630-620-5000&nbsp;&nbsp;&nbsp;Fax: 630-691-0718</FONT>
</TD></TR></TABLE>
</CENTER></BODY></HTML>